version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-demo-java-spring # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
      - image: kkddgg1001/mysql

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 30`;
            do
              nc -z localhost 3310 && echo Success && exit 0
              echo -n
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1
        # This should go into custom primary image, here's only for the sake of explanation

      - run:
          name: Mvn Test
          command: |
            cd ./backend
            mvn clean test

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples